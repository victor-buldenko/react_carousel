{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","images","props","disabled","autoplayId","autoplay","window","setInterval","slideNext","animationDuration","clickNextHandler","clearInterval","onAutoplayChange","clickPrevHandler","slidePrev","setState","document","querySelectorAll","slides","Array","from","urls","i","length","style","transform","step","transition","push","getAttribute","lastUrls","splice","LastSlides","unshift","timerId","setTimeout","timerId2","slicedFirstElems","FirstElems","console","log","this","infinite","frameSize","itemWidth","className","width","height","map","path","marginLeft","src","alt","type","onClick","React","Component","App","inputHandler","e","currentTarget","name","value","checked","autoplayStatus","action","id","min","max","placeholder","onChange","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.10ea0d46.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n  autoplay: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onAutoplayChange: (autoplay: boolean) => any;\n};\n\ntype State = {\n  images: string[];\n  disabled : boolean;\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    images: this.props.images,\n    disabled: false,\n  };\n\n  autoplayId = 0;\n\n  componentDidMount(): void {\n    console.log(this.props.infinite);\n    if (this.props.autoplay && this.autoplayId === 0) {\n      this.autoplayId = this.autoplay();\n    }\n  }\n\n  componentDidUpdate(): void {\n    if (this.props.autoplay && this.autoplayId === 0) {\n      this.autoplayId = this.autoplay();\n    }\n\n    if (!this.props.autoplay) {\n      clearInterval(this.autoplayId);\n      this.autoplayId = 0;\n    }\n  }\n\n  autoplay = (): number => {\n    const timerId = window.setInterval(() => {\n      this.slideNext();\n    }, this.props.animationDuration + 1000);\n\n    return timerId;\n  };\n\n  clickNextHandler = () => {\n    clearInterval(this.autoplayId);\n    this.autoplayId = 0;\n    this.slideNext();\n\n    if (this.props.onAutoplayChange) {\n      this.props.onAutoplayChange(false);\n    }\n  };\n\n  clickPrevHandler = () => {\n    clearInterval(this.autoplayId);\n    this.autoplayId = 0;\n    this.slidePrev();\n\n    if (this.props.onAutoplayChange) {\n      this.props.onAutoplayChange(false);\n    }\n  };\n\n  slidePrev = () => {\n    clearInterval(this.autoplayId);\n    this.setState({ disabled: true });\n    const images: NodeListOf<HTMLImageElement> = document\n      .querySelectorAll('.image');\n    const slides = Array.from(\n      document.querySelectorAll('.Carousel__slide'),\n    ) as HTMLLIElement[];\n    const urls: string[] = [];\n\n    for (let i = 0; i < images.length; i += 1) {\n      images[i].style.transform = `translateX(-${100 * this.props.step}%)`;\n      images[i].style.transition = '0ms';\n      urls.push(images[i].getAttribute('src') as string);\n    }\n\n    const lastUrls: string[] = urls.splice(\n      slides.length - this.props.step,\n      this.props.step,\n    );\n    const LastSlides: HTMLLIElement[] = slides.splice(\n      slides.length - this.props.step,\n    );\n\n    urls.unshift(...lastUrls);\n    slides.unshift(...LastSlides);\n    this.setState({ images: urls });\n\n    const timerId = setTimeout(() => {\n      clearInterval(timerId);\n      for (let i = 0; i < images.length; i += 1) {\n        images[i].style.transform = 'translateX(0)';\n        images[i].style.transition = `${this.props.animationDuration}ms`;\n      }\n    }, 0);\n\n    const timerId2 = setTimeout(() => {\n      clearInterval(timerId2);\n      this.setState({ disabled: false });\n    }, this.props.animationDuration);\n  };\n\n  slideNext = () => {\n    this.setState({ disabled: true });\n\n    // if (this.props.infinite) {\n\n    // };\n\n    const images: NodeListOf<HTMLImageElement> = document\n      .querySelectorAll('.image');\n    const urls: string[] = [];\n    const slides = Array.from(\n      document.querySelectorAll('.Carousel__slide'),\n    ) as HTMLLIElement[];\n\n    for (let i = 0; i < images.length; i += 1) {\n      images[i].style.transition = `${this.props.animationDuration}ms`;\n      images[i].style.transform = `translateX(-${100 * this.props.step}%)`;\n      urls.push(images[i].getAttribute('src') as string);\n    }\n\n    this.setState({ images: urls, disabled: true });\n\n    const timerId = setTimeout(() => {\n      for (let i = 0; i < images.length; i += 1) {\n        images[i].style.transition = '0ms';\n        images[i].style.transform = '';\n      }\n\n      const slicedFirstElems: string[] = urls.splice(0, this.props.step);\n      const FirstElems = slides.splice(0, this.props.step);\n\n      urls.push(...slicedFirstElems);\n      slides.push(...FirstElems);\n\n      clearInterval(timerId);\n      this.setState({ images: urls, disabled: false });\n    }, this.props.animationDuration);\n  };\n\n  render() {\n    const { images } = this.state;\n    const { frameSize, itemWidth, animationDuration } = this.props;\n\n    return (\n      <div className=\"Carousel\">\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: `${itemWidth * frameSize}px`,\n            height: `${itemWidth}px`,\n          }}\n        >\n          {images.map((path, i) => (\n            <li\n              className=\"Carousel__slide\"\n              key={path}\n              style={{\n                marginLeft: 0,\n                width: `${itemWidth}px`,\n                height: `${itemWidth}px`,\n                transition: `${animationDuration}ms`,\n                transform: `translateX(${0}px)`,\n              }}\n            >\n              <img\n                src={path}\n                alt={`${i}`}\n                className=\"image\"\n                style={{\n                  transition: `${animationDuration}ms`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <button\n          type=\"button\"\n          className=\"button buttonPrev\"\n          onClick={() => this.clickPrevHandler()}\n          disabled={this.state.disabled}\n        >\n          &#9001;\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button buttonNext\"\n          data-cy=\"next\"\n          onClick={() => this.clickNextHandler()}\n          disabled={this.state.disabled}\n        >\n          &#9002;\n        </button>\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-console */\n/* eslint-disable padded-blocks */\nimport React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean,\n  autoplay: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n    autoplay: false,\n  };\n\n  inputHandler = (e: { currentTarget: HTMLInputElement }) => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'step':\n        this.setState({ step: +value });\n        break;\n\n      case 'frameSize':\n        this.setState({ frameSize: +value });\n        break;\n\n      case 'itemWidth':\n        this.setState({ itemWidth: +value });\n        break;\n\n      case 'animationDuration':\n        this.setState({ animationDuration: +value });\n        break;\n\n      case 'autoplay':\n        this.setState({ autoplay: e.currentTarget.checked });\n        break;\n\n      default:\n        this.setState({ infinite: e.currentTarget.checked });\n        break;\n    }\n  };\n\n  render() {\n    const {\n      images,\n      step = 3,\n      frameSize = 3,\n      itemWidth = 130,\n      animationDuration = 1000,\n      infinite = false,\n      autoplay = false,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1\n          data-cy=\"title\"\n          className=\"title\"\n        >\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n          autoplay={autoplay}\n          onAutoplayChange={(autoplayStatus) => {\n            this.setState({ autoplay: autoplayStatus });\n          }}\n        />\n\n        <form action=\"#\" className=\"form\">\n          <label className=\"label\">\n            {`slide step [${step}] `}\n            <input\n              className=\"input\"\n              type=\"number\"\n              name=\"step\"\n              id=\"inputStep\"\n              min=\"1\"\n              max=\"3\"\n              placeholder=\"1-3\"\n              onChange={this.inputHandler}\n            />\n          </label>\n          <label className=\"label\">\n            {`frame size [${frameSize}] `}\n            <input\n              className=\"input\"\n              type=\"number\"\n              name=\"frameSize\"\n              id=\"frameSize\"\n              min=\"1\"\n              max=\"5\"\n              placeholder=\"1-5\"\n              onChange={this.inputHandler}\n            />\n          </label>\n          <label className=\"label\">\n            {`slide width [${itemWidth}] `}\n            <input\n              className=\"input\"\n              type=\"number\"\n              name=\"itemWidth\"\n              id=\"itemWidth\"\n              min=\"130\"\n              max=\"350\"\n              step=\"20\"\n              placeholder=\"100-350\"\n              onChange={this.inputHandler}\n            />\n          </label>\n          <label className=\"label\">\n            {`animation [${animationDuration}ms] `}\n            <input\n              className=\"input\"\n              type=\"number\"\n              name=\"animationDuration\"\n              id=\"animationDuration\"\n              min=\"100\"\n              max=\"5000\"\n              step=\"100\"\n              placeholder=\"100-5000\"\n              onChange={this.inputHandler}\n            />\n          </label>\n          <label className=\"label\">\n            {`autoplay [${this.state.autoplay}]`}\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              name=\"autoplay\"\n              id=\"autoplay\"\n              checked={this.state.autoplay}\n              onChange={this.inputHandler}\n            />\n          </label>\n\n          <label className=\"label\">\n            {`infinite [${this.state.infinite}]`}\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              name=\"infinite\"\n              id=\"infinite\"\n              checked={this.state.infinite}\n              onChange={this.inputHandler}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}