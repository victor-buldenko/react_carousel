{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","images","props","autoplayId","autoplay","window","setInterval","slideNext","animationDuration","clickNextHandler","clearInterval","onAutoplayChange","clickPrevHandler","slidePrev","buttons","Array","from","document","querySelectorAll","slides","urls","i","length","disabled","push","getAttribute","lastUrls","splice","step","LastSlides","style","marginLeft","parseInt","itemWidth","transition","unshift","setState","timerId","setTimeout","timerId2","x","this","infinite","buttonPrev","querySelector","removeEventListener","frameSize","className","width","height","map","path","src","alt","type","onClick","React","Component","App","inputHandler","e","currentTarget","name","value","checked","action","id","min","max","placeholder","onChange","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c04b0597.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onAutoplayChange: (autoplay: boolean) => any;\n};\n\ntype State = {\n  images: string[];\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    images: this.props.images,\n  };\n\n  autoplayId = 0;\n\n  componentDidMount(): void {\n    if (this.props.infinite && this.autoplayId === 0) {\n      this.autoplayId = this.autoplay();\n    }\n  }\n\n  componentDidUpdate(): void {\n    if (this.props.infinite && this.autoplayId === 0) {\n      this.autoplayId = this.autoplay();\n    }\n\n    if (!this.props.infinite) {\n      clearInterval(this.autoplayId);\n      this.autoplayId = 0;\n    }\n  }\n\n  componentWillUnmount(): void {\n    const buttonPrev = document.querySelector(\n      '.buttonPrev',\n    ) as HTMLButtonElement;\n    const buttonNext = document.querySelector(\n      '.buttonNext',\n    ) as HTMLButtonElement;\n\n    buttonNext.removeEventListener('click', this.slideNext);\n    buttonPrev.removeEventListener('click', this.slidePrev);\n  }\n\n  autoplay = (): number => {\n    const timerId = window.setInterval(() => {\n      this.slideNext();\n    }, this.props.animationDuration + 1000);\n\n    return timerId;\n  };\n\n  clickNextHandler = () => {\n    clearInterval(this.autoplayId);\n    this.autoplayId = 0;\n    this.slideNext();\n\n    if (this.props.onAutoplayChange) {\n      this.props.onAutoplayChange(false);\n    }\n  };\n\n  clickPrevHandler = () => {\n    clearInterval(this.autoplayId);\n    this.autoplayId = 0;\n    this.slidePrev();\n\n    if (this.props.onAutoplayChange) {\n      this.props.onAutoplayChange(false);\n    }\n  };\n\n  slidePrev = () => {\n    clearInterval(this.autoplayId);\n    const buttons = Array.from(\n      document.querySelectorAll('.button'),\n    ) as HTMLButtonElement[];\n    const images = document.querySelectorAll('.image');\n    const slides = Array.from(\n      document.querySelectorAll('.Carousel__slide'),\n    ) as HTMLLIElement[];\n    const urls: string[] = [];\n\n    for (let i = 0; i < buttons.length; i += 1) {\n      buttons[i].disabled = true;\n    }\n\n    for (let i = 0; i < images.length; i += 1) {\n      urls.push(images[i].getAttribute('src') as string);\n    }\n\n    const lastUrls: string[] = urls.splice(\n      slides.length - this.props.step,\n      this.props.step,\n    );\n    const LastSlides: HTMLLIElement[] = slides.splice(\n      slides.length - this.props.step,\n      this.props.step,\n    );\n\n    LastSlides[0].style.marginLeft = `\n    ${\n  parseInt(LastSlides[0].style.marginLeft, 10)\n      - this.props.step * this.props.itemWidth\n}px`;\n    LastSlides[0].style.transition = '0ms';\n\n    urls.unshift(...lastUrls);\n    slides.unshift(...LastSlides);\n    this.setState({ images: urls });\n\n    const timerId = setTimeout(() => {\n      clearInterval(timerId);\n      LastSlides[0].style.transition = `${this.props.animationDuration}ms`;\n      LastSlides[0].style.marginLeft = '0';\n    }, 0);\n\n    const timerId2 = setTimeout(() => {\n      clearInterval(timerId2);\n      for (let i = 0; i < buttons.length; i += 1) {\n        buttons[i].disabled = false;\n      }\n    }, this.props.animationDuration);\n  };\n\n  slideNext = () => {\n    const buttons = Array.from(\n      document.querySelectorAll('.button'),\n    ) as HTMLButtonElement[];\n    const images = document.querySelectorAll('.image');\n    const urls: string[] = [];\n    const slides = Array.from(\n      document.querySelectorAll('.Carousel__slide'),\n    ) as HTMLLIElement[];\n\n    for (let i = 0; i < buttons.length; i += 1) {\n      buttons[i].disabled = true;\n    }\n\n    for (let i = 0; i < images.length; i += 1) {\n      urls.push(images[i].getAttribute('src') as string);\n    }\n\n    slides[0].style.marginLeft = `\n      ${\n  parseInt(slides[0].style.marginLeft, 10)\n        - this.props.step * this.props.itemWidth\n}px`;\n\n    const x: string[] = urls.splice(0, this.props.step);\n\n    urls.push(...x);\n\n    const timerId = setTimeout(() => {\n      slides[0].style.marginLeft = '0';\n      clearInterval(timerId);\n      this.setState({ images: urls });\n      for (let i = 0; i < buttons.length; i += 1) {\n        buttons[i].disabled = false;\n      }\n    }, this.props.animationDuration);\n  };\n\n  render() {\n    const { images } = this.state;\n    const { frameSize, itemWidth, animationDuration } = this.props;\n\n    return (\n      <>\n        <div className=\"Carousel\">\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              width: `${itemWidth * frameSize}px`,\n              height: `${itemWidth}px`,\n            }}\n          >\n            {images.map((path, i) => (\n              <li\n                className=\"Carousel__slide\"\n                key={path}\n                style={{\n                  marginLeft: 0,\n                  width: `${itemWidth}px`,\n                  height: `${itemWidth}px`,\n                  transition: `${animationDuration}ms`,\n                }}\n              >\n                <img src={path} alt={`${i}`} className=\"image\" />\n              </li>\n            ))}\n          </ul>\n\n          <button\n            type=\"button\"\n            className=\"button buttonPrev\"\n            onClick={() => this.clickPrevHandler()}\n          >\n            &#9001;\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button buttonNext\"\n            data-cy=\"next\"\n            onClick={() => this.clickNextHandler()}\n          >\n            &#9002;\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n","/* eslint-disable no-console */\n/* eslint-disable padded-blocks */\nimport React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  inputHandler = (e: { currentTarget: HTMLInputElement }) => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'step':\n        this.setState({ step: +value });\n        break;\n\n      case 'frameSize':\n        this.setState({ frameSize: +value });\n        break;\n\n      case 'itemWidth':\n        this.setState({ itemWidth: +value });\n        break;\n\n      case 'animationDuration':\n        this.setState({ animationDuration: +value });\n        break;\n\n      default:\n        this.setState({ infinite: e.currentTarget.checked });\n        break;\n    }\n  };\n\n  render() {\n    const {\n      images,\n      step = 3,\n      frameSize = 3,\n      itemWidth = 130,\n      animationDuration = 1000,\n      infinite = false,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1\n          data-cy=\"title\"\n          className=\"title\"\n        >\n          Carousel with\n          {images.length}\n          {' '}\n          images\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n          onAutoplayChange={(autoplay) => {\n            this.setState({ infinite: autoplay });\n          }}\n        />\n\n        <form action=\"#\" className=\"form\">\n          <label className=\"label\">\n            slide step\n            {` [${step}]`}\n            <input\n              className=\"input\"\n              type=\"number\"\n              name=\"step\"\n              id=\"inputStep\"\n              min=\"1\"\n              max=\"3\"\n              placeholder=\"1-3\"\n              onChange={this.inputHandler}\n            />\n          </label>\n          <label className=\"label\">\n            frame size\n            {` [${frameSize}]`}\n            <input\n              className=\"input\"\n              type=\"number\"\n              name=\"frameSize\"\n              id=\"frameSize\"\n              min=\"1\"\n              max=\"5\"\n              placeholder=\"1-5\"\n              onChange={this.inputHandler}\n            />\n          </label>\n          <label className=\"label\">\n            slide width\n            {` [${itemWidth}]`}\n            <input\n              className=\"input\"\n              type=\"number\"\n              name=\"itemWidth\"\n              id=\"itemWidth\"\n              min=\"130\"\n              max=\"350\"\n              step=\"20\"\n              placeholder=\"100-350\"\n              onChange={this.inputHandler}\n            />\n          </label>\n          <label className=\"label\">\n            animation(ms)\n            {` [${animationDuration}]`}\n            <input\n              className=\"input\"\n              type=\"number\"\n              name=\"animationDuration\"\n              id=\"animationDuration\"\n              min=\"100\"\n              max=\"5000\"\n              step=\"100\"\n              placeholder=\"100-5000\"\n              onChange={this.inputHandler}\n            />\n          </label>\n          <label className=\"label\">\n            autoplay\n            {` [${this.state.infinite}]`}\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              name=\"infinite\"\n              id=\"infinite\"\n              checked={this.state.infinite}\n              onChange={this.inputHandler}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}